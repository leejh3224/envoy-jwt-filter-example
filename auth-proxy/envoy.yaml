static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 10000
      filter_chains:
      - filters:
        - name: envoy.filters.network.http_connection_manager
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
            codec_type: AUTO
            stat_prefix: ingress_http
            route_config:
              name: local_route
              virtual_hosts:
                - name: upstream
                  domains:
                    - "*"
                  routes:
                    - match:
                        prefix: "/"
                      route:
                        cluster: "resource-server"
            http_filters:
              - name: envoy.filters.http.jwt_authn
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                  providers:
                    auth-server:
                      issuer: "auth-server"
                      payload_in_metadata: "jwt_payload" # this part is important! rbac filter will look up for jwt_authn filter object and its payload
                      remote_jwks:
                        http_uri:
                          uri: auth-server/.well-known/jwks.json
                          cluster: "auth-server"
                          timeout: 1s
                        cache_duration:
                          seconds: 300
                      from_cookies:
                        - token
                  rules:
                    - match:
                        prefix: /login
                    - match:
                        prefix: /private
                      requires:
                        provider_name: "auth-server"
              - name: envoy.filters.http.rbac
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC
                  rules:
                    action: ALLOW
                    policies:
                      "public":
                        permissions:
                          - and_rules:
                              rules:
                                - header:
                                    name: ":method"
                                    string_match:
                                      exact: "GET"
                                - url_path:
                                    path:
                                      exact: "/login"
                        principals:
                          - any: true # login page is public
                      "admin-only":
                        permissions:
                          - and_rules:
                              rules:
                                - header:
                                    name: ":method"
                                    string_match:
                                      exact: "GET"
                                - url_path:
                                    path:
                                      exact: "/private"
                        principals:
                          metadata:
                            filter: envoy.filters.http.jwt_authn
                            path:
                              - key: jwt_payload # jwt_authn has jwt_payload object if `payload_in_metadata` is set and its value is jwt_payload
                              - key: sub
                            value:
                              string_match:
                                exact: "admin"
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
    - name: "resource-server"
      connect_timeout: 0.25s
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      load_assignment:
        cluster_name: "resource-server"
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: "resource-server"
                      port_value: 8080
    - name: "auth-server"
      connect_timeout: 0.25s
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      load_assignment:
        cluster_name: "auth-server"
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: "auth-server"
                      port_value: 8081
